{"version":3,"sources":["reducers/errorReducer.js","reducers/projectReducer.js","reducers/taskReducer.js","reducers/userReducer.js","reducers/combineReducer.js","store/store.js","components/actions/projectActions.js","components/project/ProjectItem.js","components/Dashboard.js","components/layout/Header.js","components/actions/userActions.js","components/layout/LandingPage.js","components/layout/SignIn.js","components/layout/SignUp.js","components/project/AddProject.js","components/project/UpdateProject.js","components/project/backlog/ProjectTaskItem.js","components/actions/taskActions.js","components/project/backlog/Backlog.js","components/project/backlog/ProjectBoard.js","components/project/backlog/AddProjectTaskForm.js","components/project/backlog/UpdateProjectTaskForm.js","App.js","serviceWorker.js","index.js"],"names":["initialState","errorReducer","state","action","type","payload","projects","project","projectReducer","filter","el","identifier","tasks","task","taskReducer","projectSequence","user","validToken","userReducer","combinedRducers","combineReducers","errorsReduxStore","projectReduxStore","taskReduxStore","userReduxStore","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","combineReducer","compose","applyMiddleware","createProject","projectObject","history","dispatch","a","axios","post","push","response","data","ProjectItem","props","onDeleteClick","bind","e","preventDefault","this","deleteProject","className","name","description","startDate","endDate","to","onClick","Component","ConnectedProjectItem","connect","confirm","delete","console","log","Dashboard","getProjects","myProjects","projectszzz","map","key","id","ConnectedDashboard","currState","get","Header","valid","recProps","setState","validz","logout","ConnectedHeader","localStorage","removeItem","defaults","headers","common","LandingPage","ConnectedLandingPage","SignIn","username","password","errors","onSubmit","onChange","receivedProps","errorzz","validTokenzz","target","value","loginRequest","signin","classnames","placeholder","ConnectedSignIn","succes","token","setItem","decoded","jwt_decode","SignUp","fullName","confirmPassword","errorz","newUser","signup","required","ConnectedSignUp","AddProject","newProjectObj","propsReceived","errorszzz","ConnectedAddProject","UpdateProject","getProject","match","params","thisProject","updatedProjectObject","disabled","ConnectedUpdateProject","ProjectTaskItem","summary","acceptanceCriteria","dueDate","priority","status","deleteTask","projectIdentifier","priorityClass","priorityString","ConnectedProjectTaskItem","Backlog","ConnectedBacklog","ProjectBoard","getAllTasks","ConnectedProjectBoard","AddProjectTaskForm","newTask","createTask","ConnectedAddProjectTaskForm","UpdateProjectTaskForm","updatedTask","updateTask","getTask","ConnectedUpdateProjectTaskForm","App","path","component","exact","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2a3b688a.chunk.js","sourcesContent":["//Reducer (function fired based on action type)\r\n//Takes current state value and next state(action) object\r\n\r\nconst initialState= {};\r\n\r\nconst errorReducer= (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case \"GET_ERRORS\":\r\n            //RETURNS AN OBJECT key/value pairs for store\r\n            //=== { key: value } in store state\r\n            return action.payload;  //passed from catch block in action generator - payload: error.response.data\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default errorReducer;","const initialState= {   //project state IN STORE!!\r\n    projects: [],        //all projects\r\n    project: {}\r\n}\r\n\r\nconst projectReducer= (state= initialState, action) => {\r\n    //action is sent through redux mapped dispatch\r\n    switch(action.type) {\r\n        case \"GET_PROJECTS\":\r\n            return {        //changes current redux store state\r\n                ...state,\r\n                projects: action.payload    //passed from getProject Action generator\r\n            }\r\n        case \"GET_PROJECT\":\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            }\r\n        case \"DELETE_PROJECT\":\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(el => el.identifier !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;","const initialState= {\r\n    tasks: [],\r\n    task: {}\r\n}\r\n\r\nconst taskReducer= (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case \"GET_TASKS\":\r\n            return{\r\n                ...state,\r\n                tasks: action.payload\r\n            }\r\n        case \"GET_TASK\":\r\n            return {\r\n                ...state,\r\n                task: action.payload\r\n            }\r\n        case \"DELETE_TASK\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(el => el.projectSequence !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default taskReducer;","const initialState= {\r\n    user: {},\r\n    validToken: false\r\n}\r\nconst userReducer= (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case \"SIGN_IN\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                validToken: action.payload ? true : false\r\n            };\r\n        case \"SIGN_OUT\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                validToken: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport taskReducer from \"./taskReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\n//Imported function exported as is\r\nconst combinedRducers= combineReducers({\r\n    //errorsxxx: a state object in redux store (stores values returned by error reducer)\r\n    errorsReduxStore: errorReducer,\r\n    projectReduxStore: projectReducer,\r\n    taskReduxStore: taskReducer,\r\n    userReduxStore: userReducer\r\n});\r\n\r\nexport default combinedRducers;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport combineReducer from \"./../reducers/combineReducer\";\r\n\r\nconst initialState= {};\r\n\r\nconst middleware= [thunk];//Thunk allows asynchronous functions in middleware\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    combineReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    combineReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;","import axios from \"axios\";\r\n//An arrow function that 'implicitly' returns an arrow function (dispatch)\r\n//mapped to props.dispatch on connect method\r\nconst createProject= (projectObject, history)=> async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/project\", projectObject);\r\n        history.push(\"/dashboard\");    //will manipulate this.props.history passed from parent component\r\n        dispatch({\r\n            type: \"GET_ERRORS\",         //clear errors on errorReduxStore\r\n            payload: {}     \r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type:\"GET_ERRORS\",\r\n            payload: error.response.data    //Object passed to reducer (returned to store)\r\n        })\r\n    }\r\n}\r\nconst getProjects= () => async dispatch => {\r\n    try {\r\n        const response= await axios.get(\"/api/project\");\r\n        dispatch({      //dispatch call to redux store\r\n            type: \"GET_PROJECTS\",\r\n            payload: response.data\r\n        });\r\n        dispatch({      \r\n            type: \"GET_ERRORS\",         //clear errors on errorReduxStore\r\n            payload: {}   \r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type:\"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\nconst getProject= (identifier, history) => async dispatch => {\r\n    try {\r\n        const response= await axios.get(`/api/project/${identifier}`);\r\n        dispatch({\r\n            type:\"GET_PROJECT\",\r\n            payload: response.data\r\n        });\r\n        dispatch({      \r\n            type: \"GET_ERRORS\",         //clear errors on errorReduxStore\r\n            payload: {}   \r\n        });\r\n    } catch (error) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n\r\n}\r\nconst deleteProject= (identifier) => async dispatch => {\r\n    if(window.confirm(\"Are you Sure you want to delete this project?\")) {\r\n        try {\r\n            await axios.delete(`/api/project/${identifier}`);\r\n            dispatch({\r\n                type: \"DELETE_PROJECT\",\r\n                payload: identifier\r\n            })\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n}\r\nexport { createProject, getProjects, getProject, deleteProject };","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { deleteProject } from \"./../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDeleteClick= this.onDeleteClick.bind(this);\r\n    }\r\n    onDeleteClick(e) {\r\n        e.preventDefault();     //redundant (Redux updates with state change)\r\n        this.props.deleteProject(this.props.project.identifier);\r\n    }\r\n    render() {\r\n        const {project}= this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">{project.identifier}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{project.name}</h3>\r\n                            <p>{project.description}</p>\r\n                            <p><strong>Start Date: </strong>{project.startDate}</p>\r\n                            <p><strong>End Date:   </strong>{project.endDate}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={\"/projectboard/\"+ project.identifier }>\r\n                                    <li className=\"list-group-item board\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={\"/updateProject/\"+ project.identifier }>\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nProjectItem.propTypes= {\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nconst ConnectedProjectItem= connect(null,{deleteProject})(ProjectItem);\r\n\r\nexport default ConnectedProjectItem;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport ProjectItem from \"./project/ProjectItem\";\r\nimport { getProjects } from \"./actions/projectActions\";\r\n\r\nclass Dashboard extends Component {\r\n    componentDidMount() {\r\n        this.props.getProjects();\r\n    }\r\n    render() {\r\n        const myProjects= this.props.projectszzz;  //Props are passed from mapped props\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">Projects</h1>\r\n                            <br />\r\n                            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n                            Create a Project\r\n                            </Link>\r\n                            <br />\r\n                            <hr />                         \r\n                            {myProjects.map(el => {\r\n                                return (\r\n                                    <ProjectItem key={el.id} project={el} />\r\n                                );\r\n                            })}\r\n                            <br />\r\n                            <hr />  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDashboard.propTypes= {\r\n    projectszzz: PropTypes.array.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\nconst mapStatToProps= ( currState ) => {\r\n    return {\r\n        //projectReduxStore is assigned in combine reducers which is passed to store creation\r\n        projectszzz: currState.projectReduxStore.projects,  //component props mapped to redux store state\r\n        project: currState.projectReduxStore.project        \r\n    }\r\n}\r\n\r\nconst ConnectedDashboard= connect( mapStatToProps, { getProjects } )( Dashboard );\r\n\r\nexport default ConnectedDashboard;","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport{ logout } from \"./../actions/userActions\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            valid: false\r\n        }\r\n        this.onClick= this.onClick.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        this.setState({\r\n            ...this.state,\r\n            valid: recProps.validz\r\n        })\r\n    }\r\n    onClick(e) {\r\n        this.props.logout();\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                {\r\n                    this.state.valid &&\r\n                    <div className=\"collapse navbar-collapse navbar-brand\" id=\"mobile-nav\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                                Dashboard\r\n                                </Link>\r\n                                </li>\r\n                            </ul>\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link onClick={this.onClick} to=\"/\" className=\"btn btn-md btn-warning\">\r\n                                    Sign Out\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                    </div>\r\n                }\r\n                </div>\r\n            </nav>\r\n        );\r\n    };\r\n}\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        validz: currState.userReduxStore.validToken\r\n    }\r\n}\r\nconst ConnectedHeader= connect(mapStateToProps, { logout })(Header);\r\n\r\nexport default ConnectedHeader;","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst signup= (newUser, history) => async dispatch => {\r\n    try{\r\n        await axios.post(\"/api/users/signup\", newUser);\r\n        history.push(\"/signin\");\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nconst signin= (loginRequest, history) => async dispatch => {\r\n    try {\r\n        //Hit end point\r\n        const response= await axios.post(\"/api/users/signin\", loginRequest);\r\n        //extract token\r\n        const {succes, token} = response.data;\r\n        //store token in localstorage\r\n        localStorage.setItem(\"jwt\", token);\r\n        //Set token in header\r\n        if(succes) {\r\n            axios.defaults.headers.common[\"Authorization\"]= token;\r\n        } else {\r\n            delete axios.defaults.headers.common[\"Authorization\"];\r\n        }\r\n        //decode claims (extract from token)\r\n        const decoded= jwt_decode(token);    //deconstructed from decoded object\r\n        //dispatch to reducer\r\n        dispatch({\r\n            type: \"SIGN_IN\",\r\n            payload: decoded\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\nconst logout= () => dispatch => {\r\n    localStorage.removeItem(\"jwt\");\r\n    axios.defaults.headers.common[\"Authorization\"]= \"\";\r\n    dispatch({\r\n        type: \"SIGN_OUT\",\r\n        payload: {}\r\n    })\r\n}\r\n\r\nexport { signup, signin, logout };","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass LandingPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Please log in to start managing your projects!\r\n                                </p>\r\n                                <hr />\r\n                                <Link to=\"/signup\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                    Sign Up\r\n                                </Link>\r\n                                <Link to=\"/signin\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ConnectedLandingPage= connect(null, null)(LandingPage);\r\nexport default ConnectedLandingPage;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signin } from \"./../actions/userActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        }\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n        this.onChange= this.onChange.bind(this);\r\n    }\r\n    componentWillReceiveProps(receivedProps) {\r\n        if(receivedProps.errorzz) {\r\n            this.setState({\r\n                errors: receivedProps.errorzz\r\n            })\r\n        }\r\n        if(receivedProps.validTokenzz) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const loginRequest= {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        this.props.signin(loginRequest, this.props.history);\r\n    }\r\n    render() {\r\n        const {errors}= this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"email\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })} \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.username && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.username}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}  \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.password && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.password}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSignIn.propTypes= {\r\n    signin: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        errorzz: currState.errorsReduxStore,\r\n        validTokenzz: currState.userReduxStore.validToken\r\n    }\r\n}\r\nconst ConnectedSignIn= connect(mapStateToProps, {signin})(SignIn);\r\n\r\nexport default ConnectedSignIn;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signup } from \"./../actions/userActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            username: \"\",\r\n            fullName: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        }\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n        this.onChange= this.onChange.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        if(recProps.errorz) {\r\n            this.setState({\r\n                errors: recProps.errorz\r\n            })\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser={\r\n            username: this.state.username,\r\n            fullName: this.state.fullName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        };\r\n        this.props.signup(newUser, this.props.history);\r\n    }\r\n    render() {\r\n        const { errors }= this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.fullName\r\n                                        })} \r\n                                        placeholder=\"Name\" \r\n                                        name=\"fullName\"\r\n                                        required\r\n                                        value={this.state.fullName}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.fullName && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.fullName}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"email\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })} \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.username && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.username}\r\n                                            </div>\r\n                                          )}\r\n        \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}  \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.password && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.password}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.confirmPassword\r\n                                        })} \r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\"\r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.confirmPassword && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.confirmPassword}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSignUp.propTypes= {\r\n    signup: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        errorz: currState.errorsReduxStore\r\n    }\r\n}\r\nconst ConnectedSignUp= connect(mapStateToProps, {signup})(SignUp);\r\n\r\nexport default ConnectedSignUp;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {createProject} from \"./../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //initial state\r\n        this.state= {\r\n            name: \"\",\r\n            identifier: \"\",\r\n            description: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            errors: {}  // used by component to render error messages - SET BY lifecycle hooks - lifecycle hook is fired by changes on mapped state changes (errorszzz @errorReducer)\r\n        }\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {   //this.onChange.bind(this) bound on tag\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProjectObj= this.state;    //this case we will not have more states than project form\r\n        //better to assign each key to each value\r\n        this.props.createProject(newProjectObj, this.props.history);\r\n    }\r\n    componentWillReceiveProps(propsReceived) {\r\n        if(propsReceived.errorszzz) {   //check new errorszzz property\r\n            this.setState({             //set this component state\r\n                errors: propsReceived.errorszzz\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const {errors}= this.state; //Destructure errors from component state\r\n        return (\r\n            <div>  \r\n                <div className=\"register\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                                    \"is-invalid\": errors.name\r\n                                                })} \r\n                                        placeholder=\"Project Name\"\r\n                                        name=\"name\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.name && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.name}\r\n                                            </div>\r\n                                          )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                                    \"is-invalid\": errors.identifier\r\n                                                })} \r\n                                        placeholder=\"Unique Project ID\"\r\n                                        name=\"identifier\"\r\n                                        value={this.state.identifier}\r\n                                        onChange={this.onChange}/>\r\n                                        {errors.identifier && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.identifier}\r\n                                            </div>\r\n                                          )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.description\r\n                                        })} \r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}></textarea>\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.description}\r\n                                            </div>\r\n                                          )}\r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"startDate\"\r\n                                        value={this.state.startDate || \"\"}\r\n                                        onChange={this.onChange}/>\r\n                                    </div>\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"endDate\"\r\n                                        value={this.state.endDate || \"\"}\r\n                                        onChange={this.onChange}/>\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n//Function validation\r\nAddProject.propTypes= {\r\n    //Ensure createProject action function is supplied\r\n    createProject: PropTypes.func.isRequired,\r\n    errorszzz: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps= (currState) => { //arg is current state and returns an object\r\n    return {\r\n        errorszzz: currState.errorsReduxStore\r\n        //erros: sets a new prop (errorszzz) that is mapped to state\r\n        //currState.errors is from redux store current state\r\n    }\r\n}\r\n//function connect({mapStateToProps}?, {mapDispatchToProps}?, {mergeProps}?, options?)\r\nconst ConnectedAddProject= connect(mapStateToProps, {createProject})(AddProject); //connect this component to store\r\n\r\nexport default ConnectedAddProject;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { getProject, createProject } from \"./../actions/projectActions\";\r\n\r\nclass UpdateProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            id: \"\",\r\n            name: \"\",\r\n            identifier: \"\",\r\n            description: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.props.getProject(this.props.match.params.id, this.props.history);\r\n    }\r\n    componentWillReceiveProps(receivedProps) {\r\n        if(receivedProps.thisProject) {\r\n            this.setState({\r\n                id: receivedProps.thisProject.id,\r\n                ...receivedProps.thisProject    //Set from mapped props to sore stats\r\n            })\r\n        }\r\n        if(receivedProps.errors) {\r\n            this.setState({\r\n                errors: receivedProps.errors\r\n            })\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const updatedProjectObject= this.state;\r\n        this.props.createProject(updatedProjectObject, this.props.history);\r\n    }\r\n    render() {\r\n        const {errors}= this.state;\r\n        return (\r\n            <div>  \r\n                <div className=\"register\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                                    \"is-invalid\": errors.name\r\n                                                })} \r\n                                        placeholder=\"Project Name\"\r\n                                        name=\"name\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.name && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.name}\r\n                                            </div>\r\n                                          )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                        disabled \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                                    \"is-invalid\": errors.identifier\r\n                                                })} \r\n                                        placeholder=\"Unique Project ID\"\r\n                                        name=\"identifier\"\r\n                                        value={this.state.identifier}\r\n                                        onChange={this.onChange}/>\r\n                                        {errors.identifier && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.identifier}\r\n                                            </div>\r\n                                          )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.description\r\n                                        })} \r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}></textarea>\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.description}\r\n                                            </div>\r\n                                          )}\r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"startDate\"\r\n                                        value={this.state.startDate || \"\"}\r\n                                        onChange={this.onChange}/>\r\n                                    </div>\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"endDate\"\r\n                                        value={this.state.endDate || \"\"}\r\n                                        onChange={this.onChange}/>\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes= {\r\n    thisProject: PropTypes.object.isRequired,\r\n    getProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        thisProject: currState.projectReduxStore.project,\r\n        errors: currState.errorsReduxStore\r\n    }\r\n}\r\nconst ConnectedUpdateProject= connect(mapStateToProps, {getProject, createProject})(UpdateProject);\r\n\r\nexport default ConnectedUpdateProject;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteTask} from \"./../../actions/taskActions\";\r\n\r\nclass ProjectTaskItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            dueDate: \"\",\r\n            priority: \"\",\r\n            status: \"\"\r\n        }\r\n        this.onDeleteClick= this.onDeleteClick.bind(this);\r\n    }\r\n    onDeleteClick(e) {\r\n        this.props.deleteTask(this.props.task.projectIdentifier, this.props.task.projectSequence);\r\n    }\r\n    render() {\r\n        let priorityClass;\r\n        let priorityString;\r\n        switch(this.props.task.priority) {\r\n            case 1:\r\n                priorityClass= \"bg-danger text-light\";\r\n                priorityString= \"HIGH\";\r\n                break;\r\n            case 2:\r\n                priorityClass= \"bg-warning text-light\";\r\n                priorityString= \"MEDIUM\";\r\n                break;\r\n            case 3:\r\n                priorityClass= \"bg-info text-light\";\r\n                priorityString= \"LOW\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n                <div className={`card-header text-primary ${priorityClass}`}>\r\n                    ID: {this.props.task.projectSequence} -- Priority: {priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{this.props.task.summary}</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {this.props.task.acceptanceCriteria}\r\n                    </p>\r\n                    <p><strong>Due Date: </strong>{this.props.task.dueDate}</p>\r\n                    <Link \r\n                        to={`/updatetaskform/${this.props.task.projectIdentifier}/${this.props.task.projectSequence}`} \r\n                        className=\"btn btn-primary\">\r\n                        Update\r\n                    </Link>\r\n                    <button onClick={this.onDeleteClick} className=\"btn btn-danger ml-4\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectTaskItem.propTypes= {\r\n    deleteTask: PropTypes.func.isRequired\r\n}\r\n\r\nconst ConnectedProjectTaskItem= connect(null, {deleteTask})(ProjectTaskItem);\r\n\r\nexport default ConnectedProjectTaskItem;","import axios from \"axios\";\r\n\r\nconst createTask= (newTask, projectIdentifier, history) => async dispatch =>{\r\n    try {\r\n        await axios.post(`/api/backlog/${projectIdentifier}`, newTask);\r\n        history.push(`/projectboard/${projectIdentifier}`);\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\nconst updateTask= (updatedTask, projectIdentifier, projectSequence, history) => async dispatch => {\r\n    try {\r\n        await \r\n            axios.post(`/api/backlog/${projectIdentifier}/${projectSequence}`,\r\n                updatedTask);\r\n            history.push(`/projectboard/${projectIdentifier}`);\r\n            dispatch({\r\n                type: \"GET_ERRORS\",\r\n                payload: {}\r\n            })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\nconst getAllTasks= (projectIdentifier) => async dispatch => {\r\n    try {\r\n        const response= await axios.get(`/api/backlog/${projectIdentifier}`);\r\n        dispatch({\r\n            type: \"GET_TASKS\",\r\n            payload: response.data\r\n        })\r\n    } catch( error ) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\nconst getTask= (projectIdentifier, projectSequence, history) => async dispatch => {\r\n    try {\r\n        const response= \r\n            await axios.get(`/api/backlog/${projectIdentifier}/${projectSequence}`);\r\n        dispatch({\r\n            type: \"GET_TASK\",\r\n            payload: response.data\r\n        })\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch( error ) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n        history.push(`/projectboard/${projectIdentifier}`);\r\n        console.log(\"ERROR\");\r\n    }\r\n}\r\nconst deleteTask= (projectIdentifier, projectSequence) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/backlog/${projectIdentifier}/${projectSequence}`);\r\n        dispatch({\r\n            type: \"DELETE_TASK\",\r\n            payload: projectSequence\r\n        })\r\n        dispatch({\r\n            type:\"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type:\"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    }\r\n}\r\n\r\n \r\nexport { getAllTasks, getTask, deleteTask, createTask, updateTask };","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ProjectTaskItem from \"./ProjectTaskItem\";\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n        const tasks= this.props.tasks.map(el => {\r\n            return (\r\n                <ProjectTaskItem key={el.id} task={el} />\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TO DO</h3>\r\n                            </div>\r\n                        </div>\r\n                        {tasks.filter(el => el.props.task.status === \"TO_DO\")}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>\r\n                        </div>\r\n                        {tasks.filter(el => el.props.task.status === \"IN_PROGRESS\")}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>\r\n                        </div>\r\n                        {tasks.filter(el => el.props.task.status === \"DONE\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst ConnectedBacklog= connect(null, null)(Backlog);\r\n\r\nexport default ConnectedBacklog;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport Backlog from \"./Backlog\";\r\nimport { getAllTasks } from \"../../actions/taskActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            tasks: [],\r\n            errors: {}\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getAllTasks(this.props.match.params.id);\r\n    }\r\n    componentWillReceiveProps(receivedProps) {\r\n        if(receivedProps.errors) {\r\n            this.setState({\r\n                ...this.state,\r\n                errors: receivedProps.errors\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={`/addtaskform/${this.props.match.params.id}`} className=\"btn btn-primary mb-3\">\r\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n                </Link>\r\n                <br />\r\n                <hr />\r\n                {this.state.errors.identifier && \r\n                    (<div className=\"alert alert-danger text-center\">\r\n                        {this.state.errors.identifier}\r\n                    </div>)}\r\n                <Backlog tasks={this.props.tasks}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        tasks: currState.taskReduxStore.tasks,\r\n        errors: currState.errorsReduxStore\r\n    }\r\n}\r\nconst ConnectedProjectBoard= connect(mapStateToProps, {getAllTasks})(ProjectBoard);\r\n\r\nexport default ConnectedProjectBoard;\r\n","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {createTask} from \"./../../actions/taskActions\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTaskForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            dueDate: \"\",\r\n            priority: \"\",\r\n            status: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newTask= {\r\n            ...this.state\r\n        }\r\n        this.props.createTask(newTask, this.props.match.params.id, this.props.history)\r\n    }\r\n    componentWillReceiveProps(receivedProps) {\r\n        if(receivedProps.errors) {\r\n            this.setState({\r\n                errors: receivedProps.errors\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const {errors}= this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectboard/${this.props.match.params.id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })} \r\n                                        name=\"summary\" \r\n                                        placeholder=\"Project Task summary\" \r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}/>\r\n                                        {errors.summary && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.summary}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className=\"form-control form-control-lg\" \r\n                                        placeholder=\"Acceptance Criteria\" \r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"date\" \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"dueDate\" \r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}>\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n        \r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}>\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n        \r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProjectTaskForm.propTypes= {\r\n    createTask: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        errors: currState.errorsReduxStore\r\n    }\r\n}\r\nconst ConnectedAddProjectTaskForm= connect(mapStateToProps, {createTask})(AddProjectTaskForm);\r\n\r\nexport default ConnectedAddProjectTaskForm;","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateTask, getTask} from \"./../../actions/taskActions\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTaskForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            dueDate: \"\",\r\n            priority: \"\",\r\n            status: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const updatedTask= {\r\n            ...this.state\r\n        }\r\n        this.props.updateTask(updatedTask, \r\n                            this.props.match.params.id, \r\n                            this.props.task.projectSequence, \r\n                            this.props.history)\r\n    }\r\n    componentDidMount() {\r\n        this.props.getTask(this.props.match.params.id, \r\n                        this.props.match.params.projectSequence, \r\n                        this.props.history);\r\n    }\r\n    componentWillReceiveProps(receivedProps) {\r\n        if(receivedProps.errors) {\r\n            this.setState({\r\n                errors: receivedProps.errors\r\n            });\r\n        }\r\n        if(receivedProps.task) {\r\n            this.setState({\r\n                ...receivedProps.task\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const {errors}= this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectboard/${this.props.match.params.id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })} \r\n                                        name=\"summary\" \r\n                                        placeholder=\"Project Task summary\" \r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}/>\r\n                                        {errors.summary && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.summary}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className=\"form-control form-control-lg\" \r\n                                        placeholder=\"Acceptance Criteria\" \r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"date\" \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"dueDate\" \r\n                                        value={this.state.dueDate || \"\"}\r\n                                        onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}>\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n        \r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}>\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n        \r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTaskForm.propTypes= {\r\n    updateTask: PropTypes.func.isRequired,\r\n    getTask: PropTypes.func.isRequired,\r\n    task: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        errors: currState.errorsReduxStore,\r\n        task: currState.taskReduxStore.task\r\n    }\r\n}\r\n\r\nconst ConnectedUpdateProjectTaskForm= \r\n    connect(mapStateToProps, {updateTask, getTask})(UpdateProjectTaskForm);\r\n\r\nexport default ConnectedUpdateProjectTaskForm;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n/***Styling****/\r\nimport \"./App.css\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n/***Components****/\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/layout/Header\";\r\nimport LandingPage from \"./components/layout/LandingPage\";\r\nimport SignIn from \"./components/layout/SignIn\";\r\nimport SignUp from \"./components/layout/SignUp\";\r\nimport AddProject from \"./components/project/AddProject\";\r\nimport UpdateProject from \"./components/project/UpdateProject\";\r\nimport ProjectBoard from \"./components/project/backlog/ProjectBoard\";\r\nimport AddProjectTaskForm from \"./components/project/backlog/AddProjectTaskForm\";\r\nimport UpdateProjectTaskForm from \"./components/project/backlog/UpdateProjectTaskForm\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n              <Header />\r\n              <Route path=\"/\" component={LandingPage} exact={true} />\r\n              <Route path=\"/signin\" component={SignIn} exact={true} />\r\n              <Route path=\"/signup\" component={SignUp} exact={true} />\r\n              <Route path=\"/dashboard\" component={Dashboard} exact={true} />\r\n              <Route path=\"/addProject\"  component={AddProject} exact={true}/>\r\n              <Route path=\"/updateProject/:id\" component={UpdateProject} exact={true} />\r\n              <Route path=\"/projectboard/:id\" component={ProjectBoard} exact={true} />\r\n              <Route path=\"/addtaskform/:id\" component={AddProjectTaskForm} exact={true} />\r\n              <Route path=\"/updatetaskform/:id/:projectSequence\" component={UpdateProjectTaskForm} exact={true} />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}